{"name":"Teste","tagline":"","body":"### int length (LInt)\r\n```\r\nint length (LInt z){\r\n\tLInt aux = z;\r\n\tint count = 0;\r\n\tif (z==NULL)\r\n\t\treturn 0;\r\n\twhile (aux->prox!= NULL){\r\n\t\tcount++;\r\n\t\taux = aux->prox;\r\n\t}\r\n\tcount ++;\r\n\treturn count;\r\n}\r\n```\r\n\r\n### void freeL (LInt)\r\n```\r\nvoid freeL (LInt z){\r\n\tif (z==NULL)\r\n\t\treturn;\r\n\tLInt aux = z;\r\n\twhile (z!=NULL){\r\n\t\tz=z->prox;\r\n\t\tfree(aux);\r\n\t\taux = z;\r\n\t}\r\n}\r\n```\r\n\r\n\r\n### void imprime (LInt)\r\n```\r\nvoid imprime (LInt z){\r\n\tif (z==NULL)\r\n\t\treturn;\r\n\twhile (z!=NULL){\r\n\t\tprintf(\"%d\\n\", z->valor);\r\n\t\tz=z->prox;\r\n\t}\r\n}\r\n```\r\n\r\n\r\n### LInt reverse (LInt)\r\n```\r\nLInt reverse (LInt z){\r\n\tif (z==NULL || z->prox==NULL)\r\n\t\treturn z;\r\n\tLInt top = z;\r\n\twhile (z->prox!=NULL){\r\n\t\tz=z->prox;\r\n\t}\r\n\tLInt bottom = z;\r\n\tLInt low = bottom;\r\n\tz=top;\r\n\twhile (low!=top){\r\n\t\twhile (z->prox!=low){\r\n\t\tz=z->prox;\r\n\t}\r\n\tlow->prox = z;\r\n\tlow=low->prox;\r\n\tz=top;\r\n\t}\r\n\ttop->prox = NULL;\r\n\r\n\treturn bottom;\r\n}\r\n```\r\n\r\n### void insert (LInt *, int)\r\n```\r\nvoid insert (LInt *z, int x){\r\n\tLInt newBox = newLInt(x,NULL);\r\n\tLInt zz = *z;\r\n\tif (zz == NULL){\r\n\t\tzz = newBox;\r\n\t\t*z = zz;\r\n\t\treturn;\r\n\t}\r\n\telse if (zz->valor > x){\r\n\t\tnewBox->prox = zz;\r\n\t\tzz = newBox;\r\n\t\t*z = zz;\r\n\t\treturn;\r\n\t}\r\n\twhile (zz->prox!=NULL && (zz->prox->valor)<x){\r\n\t\tzz= zz->prox;\r\n\t}\r\n\tnewBox->prox = zz->prox;\r\n\tzz-> prox = newBox;\r\n}\r\n```\r\n\r\n### int remove (LInt *, int)\r\n```\r\nint removez (LInt *z, int x){\r\n\tLInt zz = *z;\r\n\tLInt aux = zz;\r\n\tLInt ante = zz;\r\n\tif (zz==NULL || zz->valor > x)\r\n\t\treturn 1;\r\n\r\n\telse if (zz->valor == x){\r\n\t\tzz = zz->prox;\r\n\t\tfree(aux);\r\n\t\t*z = zz;\r\n\t\treturn 0;\r\n\t}\r\n\tzz= zz->prox;\r\n\twhile (zz && zz->valor < x){\r\n\t\tzz= zz->prox;\r\n\t\tante = ante->prox;\r\n\t}\r\n\tif (zz!=NULL && zz->valor == x){\r\n\t\tif (zz->prox != NULL){\r\n\t\t\tante->prox = zz->prox;\r\n\t\t\tfree(zz);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfree(zz);\r\n\t\t\tante->prox = NULL;\r\n\t\t\treturn 0;\r\n\t}\r\n\t}\r\n\treturn 1;\r\n}\r\n```\r\n\r\n### LInt merge (LInt, LInt)\r\n```\r\nLInt merge(LInt a, LInt b){\r\n\tif (a==NULL)\r\n\t\treturn b;\r\n\tif (b==NULL)\r\n\t\treturn a;\r\n\tLInt head;\r\n\tif (a->valor < b->valor){\r\n\t\thead = a;\r\n\t\ta = a->prox;\r\n\t}\r\n\telse{\r\n\t\thead = b;\r\n\t\tb = b->prox;\r\n\t}\r\n\tLInt fixed_head = head;\r\n\twhile (a!=NULL && b!=NULL){\r\n\t\tif (a->valor < b->valor){\r\n\t\t\thead->prox = a;\r\n\t\t\thead = head->prox;\r\n\t\t\ta = a->prox;\r\n\t\t}\r\n\t\telse if (a->valor > b->valor){\r\n\t\t\thead->prox = b;\r\n\t\t\thead = head->prox;\r\n\t\t\tb = b->prox;\r\n\t\t}\r\n\t}\r\n\tif (a == NULL)\r\n\t\thead->prox = b;\r\n\telse if (b==NULL)\r\n\t\thead->prox = a;\r\n\treturn fixed_head;\r\n}\r\n```\r\n\r\n### void split (LInt l, int, LInt *, LInt *)\r\n```\r\nvoid split (LInt l, int x, LInt *mx, LInt *Mx){\r\n\tif (l==NULL)\r\n\t\treturn;\r\n\tLInt mmx = newLInt(666, NULL);\r\n\tLInt MMx = newLInt(666, NULL);\r\n\tLInt tmmx = mmx;\r\n\tLInt tMMx = MMx;\r\n\twhile (l){\r\n\t\tif (l->valor >= x){\r\n\t\t\ttMMx->prox = l;\r\n\t\t\ttMMx = tMMx->prox;\r\n\t\t}\r\n\t\tif (l->valor <= x){\r\n\t\t\ttmmx->prox = l;\r\n\t\t\ttmmx = tmmx->prox;\r\n\t\t}\r\n\t\tl = l-> prox;\r\n\t}\r\n\ttMMx->prox = NULL;\r\n\ttmmx->prox = NULL;\r\n\r\n\t*mx = mmx->prox;\r\n\t*Mx = MMx->prox;\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}